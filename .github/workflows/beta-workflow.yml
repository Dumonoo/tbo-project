name: Build beta

on:
  push:
    branches-ignore:
    - main

jobs:
  # unit-tests:
  #   name: Run unit tests
  #   runs-on: ubuntu-latest
  #   steps:
  # sast-scanner:
  #   name: Run SAST scanners
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Install bandit
  #       run: |
  #         sudo pip install bandit

  #     - name: Run bandit SAST
  #       run: |
  #           bandit -r . -f html -o bandit-raport.html 


  sca-scanner:
    runs-on: ubuntu-latest
    name: pupio/safety SCA scan
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run pupio/safety scan
        run: |
          set -x
          docker run -v ${{github.workspace}}:/sources pyupio/safety safety check -r /sources/requirements.txt --full-report

      # - name: Upload SCA report
      #   uses: actions/upload-artifact@v4
      #   if: ${{ always() }} # You always want to be notified: success, failure, or cancelled
      #   with:
      #      name: Depcheck report
      #      path: ${{github.workspace}}/reports

  # # OWASP scanner addon
  # sca-scanner:
  #   runs-on: ubuntu-latest
  #   name: depecheck_test
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Run SCA scan
  #       uses: dependency-check/Dependency-Check_Action@main
  #       id: Depcheck
  #       with:
  #         project: 'Python project'
  #         path: '.'
  #         format: 'HTML'
  #         out: 'reports' # this is the default, no need to specify unless you wish to override it
  #         args: >
  #           --failOnCVSS 7
  #           --enableExperimental

  #     - name: Upload SCA report
  #       uses: actions/upload-artifact@v4
  #       if: ${{ always() }} # You always want to be notified: success, failure, or cancelled
  #       with:
  #          name: Depcheck report
  #          path: ${{github.workspace}}/reports

  # sca-report:
  #   runs-on: ubuntu-latest
  #   name: sca-report-job
  #   if: ${{ always() }} # You always want to be notified: success, failure, or cancelled
  #   needs: [sca-scanner]
  #   steps:
  #     - name: Upload SCA Report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: Depcheck report
  #         path: /github/workspace/reports

  # # OWASP scanner directly (API key download problem)
  # sca-scanner:
  #   name: Run SCA OWASP scanner
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Set up Java
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: 'temurin'
  #         java-version: '11'

  #     - name: Install OWASP SCA
  #       run: |
  #         curl -Ls "https://github.com/jeremylong/DependencyCheck/releases/download/v12.0.1/dependency-check-12.0.1-release.zip" --output dependency-check.zip
  #         unzip dependency-check.zip -d dependency-check

  #     - name: Run OWASP SCA
  #       run: |
  #         dependency-check/dependency-check/bin/dependency-check.sh \
  #         --project "Python project" \
  #         --scan . \
  #         --out sca-report \
  #         --format HTML

  #     - name: Upload SCA report
  #       if: always()
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: SCA raport
  #         path: ${{github.workspace}}/sca-report

  # https://github.com/marketplace/actions/build-and-push-docker-images
  build-and-publish:
    name: Build and publish beta image
    # needs: [sast-scanner]
    needs: [sca-scanner]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          tags: ${{ vars.DOCKERHUB_USERNAME }}/tbo-project-hub:beta